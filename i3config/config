# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $mod2 Mod1+Mod4


# Define the monitors
set $primaryMonitor eDP1
set $secondaryMonitor HDMI1


# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:Font Awesome 5 Free, monospace 8
#font pango:Font Awesome 5 Free, System San Francisco 8
font pango:System San Francisco 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec dmenu_run -sb tomato -l 8
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Enable/Disable dual display ouput
bindsym $mod2+d exec --no-startup-id sh ~/.config/i3/scripts/screencheck.sh $primaryMonitor $secondaryMonitor
bindsym $mod2+shift+d exec --no-startup-id sh ~/.config/i3/scripts/screencheck.sh $primaryMonitor $secondaryMonitor left

# Define workspace variables
set $ws_firefox			"1 Browser "
set $ws_terminal		"2 Terminals "
set $ws_cprogramming		"3 C/C++ "
set $ws_pythonprogramming	"4 Python "
set $ws_science			"5 Science "
set $ws_general			"6 General "
set $ws_fileexplorer		"7 Files "
set $ws_comms			"8 Comms "
set $ws_chatting		"9 Chatting "
set $ws_media			"10 Media "

set $ws_browser_secScreen 			"1 Browsing "
set $ws_terminals_secScreen 		"2 CLI "
set $ws_coding_secScreen			"3 Coding "
set $ws_general_secScreen 			"4 General "

# Assign workspaces to specific screens
workspace $ws_firefox               output $primaryMonitor
workspace $ws_cprogramming          output $primaryMonitor
workspace $ws_pythonprogramming     output $primaryMonitor
workspace $ws_science               output $primaryMonitor
workspace $ws_general               output $primaryMonitor
workspace $ws_fileexplorer          output $primaryMonitor
workspace $ws_comms                 output $primaryMonitor
workspace $ws_chatting              output $primaryMonitor
workspace $ws_media                 output $primaryMonitor

workspace $ws_browser_secScreen     output $secondaryMonitor
workspace $ws_terminals_secScreen   output $secondaryMonitor
workspace $ws_coding_secScreen      output $secondaryMonitor
workspace $ws_general_secScreen     output $secondaryMonitor


# switch to workspace
bindsym $mod+1 workspace $ws_firefox
bindsym $mod+2 workspace $ws_terminal
bindsym $mod+3 workspace $ws_cprogramming
bindsym $mod+4 workspace $ws_pythonprogramming
bindsym $mod+5 workspace $ws_science
bindsym $mod+6 workspace $ws_general
bindsym $mod+7 workspace $ws_fileexplorer
bindsym $mod+8 workspace $ws_comms
bindsym $mod+9 workspace $ws_chatting
bindsym $mod+0 workspace $ws_media

bindsym $mod2+1 workspace $ws_browser_secScreen
bindsym $mod2+2 workspace $ws_terminals_secScreen
bindsym $mod2+3 workspace $ws_coding_secScreen
bindsym $mod2+4 workspace $ws_general_secScreen

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws_firefox
bindsym $mod+Shift+2 move container to workspace $ws_terminal
bindsym $mod+Shift+3 move container to workspace $ws_cprogramming
bindsym $mod+Shift+4 move container to workspace $ws_pythonprogramming
bindsym $mod+Shift+5 move container to workspace $ws_science
bindsym $mod+Shift+6 move container to workspace $ws_general
bindsym $mod+Shift+7 move container to workspace $ws_fileexplorer
bindsym $mod+Shift+8 move container to workspace $ws_comms
bindsym $mod+Shift+9 move container to workspace $ws_chatting
bindsym $mod+Shift+0 move container to workspace $ws_media

bindsym $mod2+Shift+1 move container to workspace $ws_browser_secScreen
bindsym $mod2+Shift+2 move container to workspace $ws_terminals_secScreen
bindsym $mod2+Shift+3 move container to workspace $ws_coding_secScreen
bindsym $mod2+Shift+4 move container to workspace $ws_general_secScreen

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Set custom color variables
#set $bg-color			#2f343f
#set $inactive-bg-color		#2f343f
set $bg-color			#000000
set $inactive-bg-color		#000000
set $text-color			#f3f4f5
set $inactive-text-color	#676E7D
set $urgent-bg-color		#E53935

# Set the window colors
#
# action		border			background		text			indicator
client.focused		$bg-color		$bg-color		$text-color		#00ff00
client.unfocused	$inactive-bg-color	$inactive-bg-color	$inactive-text-color	#00ff00
client.focused_inactive	$inactive-bg-color	$inactive-bg-color	$inactive-text-color	#00ff00
client.urgent		$urgent-bg-color	$urgent-bg-color	$text-color		#00ff00


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {
        #status_command i3status
	status_command i3blocks -c ~/.config/i3/i3blocks.conf
        tray_output primary
	colors {
		background $bg-color
		separator #757575
		#                  border             background         text
		focused_workspace  $bg-color          $bg-color          $text-color
		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
	}
}

# Floating windows
for_window [class="Skype"] floating enable
for_window [class="RadioTelescopePC.py"] floating enable
for_window [class="obs"] floating enable

# Window focus
for_window [class="Gnome-terminal"] focus
for_window [class="Firefox"] focus

# Sticky windows
for_window [title="Battery Warning"] sticky enable

# Workspace assignments
assign [class="Firefox"]						$ws_firefox
assign [class="Gnome-terminal"]					$ws_terminal
assign [class="Atollic TrueSTUDIO for STM32"]	$ws_cprogramming
assign [class="Eclipse"]						$ws_cprogramming
assign [class="jetbrains-pycharm"]				$ws_pythonprogramming
assign [class="Skype"]							$ws_chatting
assign [class="discord"]						$ws_chatting
assign [class="Spotify"]						$ws_media
assign [class="jetbrains-clion"]				$ws_cprogramming
assign [class="Nautilus"]						$ws_fileexplorer
assign [class="Mattermost"]						$ws_comms
assign [class="Slack"] 							$ws_comms
assign [class="Gnuradio-companion"] 			$ws_science
assign [class="MATLAB R2018a"]      			$ws_science
assign [class="obs"]                			$ws_general


# Bindings
# Custom key bindings for apps
bindsym $mod+shift+x exec i3lock -i ~/.i3lockimage_new.png
bindsym $mod+shift+a exec /opt/Atollic_TrueSTUDIO_for_STM32_x86_64_9.1.0/ide/TrueSTUDIO
bindsym $mod+shift+n exec ~/clion-*/bin/clion.sh
bindsym $mod+shift+p exec charm
bindsym $mod+shift+f exec firefox
bindsym $mod+shift+m exec ~/MATLAB/R2018a/bin/./matlab

# Screen shot key bindings
bindsym Print exec gnome-screenshot
bindsym ctrl+Print exec gnome-screenshot -w

# Pulse Audio controls
bindsym XF86AudioRaiseVolume	exec --no-startup-id pactl set-sink-volume alsa_output.pci-0000_00_1f.3.analog-stereo +2% #increase sound volume
bindsym XF86AudioLowerVolume	exec --no-startup-id pactl set-sink-volume alsa_output.pci-0000_00_1f.3.analog-stereo -2% #decrease sound volume
bindsym XF86AudioMute		exec --no-startup-id pactl set-sink-mute alsa_output.pci-0000_00_1f.3.analog-stereo toggle # mute sound

# Sreen brightness controls
# Give write permissions to backlight file in /sys/class/(whichever folder)/backlight...
# ...if it is not working
bindsym XF86MonBrightnessUp	exec light -A 2 # increase screen brightness
bindsym XF86MonBrightnessDown	exec light -U 2 # decrease screen brightness

# Power operations
bindsym $mod+ctrl+x exec shutdown now
bindsym $mod+ctrl+r exec shutdown -r now

# Rofi setup
# bindsym $mod+d exec rofi -show run -opacity "85" -bw 0 -bc "$bg-color" -fg "$text-color" -hlbg "$bg-color" -hlfg "#9575cd"

# Executions
# Set wallpaper
exec_always feh --bg-fill ~/.wallpaper.jpg

# Trackpad configuration (Natural scrolling and tap click)
set $TAPPING $(xinput list-props 11 | grep "Tapping Enabled" | head -1 | awk '{print $4}' | grep -o '[0-9]\+')
set $SCROLLING $(xinput list-props 11 | grep "Natural Scrolling Enabled" | head -1 | awk '{print $5}' | grep -o '[0-9]\+')

exec_always xinput set-prop 11 291 1
exec_always xinput set-prop 14 291 1
exec_always xinput set-prop 11 299 1
exec_always xinput set-prop 14 299 1

# Run compton to support transparencies
exec --no-startup-id compton -f

# Set a default startup workspace
exec --no-startup-id i3-msg workspace $terminalworkspace

# Run app at startup
exec --no-startup-id redshift
exec --no-startup-id i3-sensible-terminal
exec --no-startup-id nautilus
exec_always --no-startup-id "setxkbmap -layout us,gr -variant ,, -option grp:alt_space_toggle"
#exec_always --no-startup-id ./i3-battery-popup -t 2m -n
